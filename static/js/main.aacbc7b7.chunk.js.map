{"version":3,"sources":["parse.ts","useDebounce.ts","TreeNode.tsx","App.tsx","index.tsx"],"names":["parse","code","_unused","useDebounce","value","delay","_useState","useState","_useState2","Object","slicedToArray","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","NodeType","styled","span","withConfig","displayName","componentId","Key","String","Number","TreeNode","_ref","node","mark","expanded","setExpanded","react_default","a","createElement","TreeNode_String","TreeNode_Number","_StyledSpan2","style","fontWeight","textDecoration","onClick","e","preventDefault","onMouseOver","loc","type","_StyledSpan","className","start","line","column","end","renderLoc","display","entries","map","_ref2","_ref3","key","val","includes","paddingLeft","borderLeft","forEach","length","i","QUERY_CM_OPTS","mode","lineNumbers","smartIndent","tabSize","indentWithTabs","JS_CM_OPTS","theme","useLocalQuery","createPersistedState","useLocalCode","INITIAL_QUERY","INITIAL_JS","wrap","x","instance","useRef","sel","_useLocalCode","_useLocalCode2","setCode","ast","setAst","_useLocalQuery","_useLocalQuery2","query","setQuery","_useState3","_useState4","setSel","code_db","query_db","apply","useCallback","current","marker","clear","editor","getDoc","markText","ch","doc","filter","m","_StyledDiv","_StyledDiv2","react_codemirror2","options","onBeforeChange","data","_StyledDiv3","concat","_StyledDiv4","_StyledDiv5","editorDidMount","_StyledDiv6","onMouseLeave","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.aacbc7b7.chunk.js","sourcesContent":["import { parse } from \"@babel/parser\";\n\nexport default function(code: string) {\n  try {\n    return parse(code);\n  } catch {\n    return null;\n  }\n}\n","import { useState, useEffect } from \"react\";\n\nexport default function useDebounce<T>(value: T, delay: number) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value]);\n\n  return debouncedValue;\n}\n","import styled from \"styled-components/macro\";\nimport React, { useState } from \"react\";\nimport Loc from \"./Loc\";\n\ninterface Node {\n  type: string;\n  loc?: Loc;\n}\n\nconst NodeType = styled.span`\n  color: black;\n  text-decoration: underline;\n`;\n\nconst Key = styled.span`\n  font-style: italic;\n  color: #999;\n`;\n\nconst String = styled.span`\n  font-weight: bold;\n  color: #4caf50;\n`;\n\nconst Number = styled.span`\n  font-weight: bold;\n  color: red;\n`;\n\nfunction renderLoc(loc: Loc, mark?: (loc: Loc) => void) {\n  return (\n    <span\n      className=\"loc\"\n      css={`\n        font-size: 0.8em;\n        color: #999;\n        background: #f5f5f5;\n        padding: 0.1em;\n        cursor: pointer;\n      `}\n      onClick={mark ? () => mark(loc) : () => {}}\n    >\n      {loc.start.line}:{loc.start.column} - {loc.end.line}:{loc.end.column}\n    </span>\n  );\n}\n\ninterface Props {\n  node: null | Node;\n  mark?: (loc?: null | Loc) => void;\n}\n\nexport default function TreeNode({ node, mark }: Props) {\n  const [expanded, setExpanded] = useState<boolean>(true);\n\n  if (node === null) {\n    return <span>null</span>;\n  } else if (typeof node === \"string\") {\n    return <String>\"{node}\"</String>;\n  } else if (typeof node === \"number\") {\n    return <Number>\"{node}\"</Number>;\n  } else {\n    return (\n      <span>\n        <span\n          css={`\n            cursor: pointer;\n            > .loc {\n              display: none;\n            }\n            :hover {\n              > .loc {\n                display: inline;\n              }\n            }\n          `}\n        >\n          <NodeType\n            style={\n              expanded ? { fontWeight: \"bold\", textDecoration: \"none\" } : {}\n            }\n            onClick={e => {\n              e.preventDefault();\n              setExpanded(!expanded);\n              return false;\n            }}\n            onMouseOver={() => mark && mark(node.loc)}\n          >\n            {node.type}\n          </NodeType>{\" \"}\n          {\"{\"} {\"loc\" in node ? renderLoc(node.loc!, mark) : null}\n        </span>\n        <span style={{ display: expanded ? \"inline\" : \"none\" }}>\n          {Object.entries(node).map(([key, val]) => {\n            if ([\"type\", \"start\", \"end\", \"loc\"].includes(key)) {\n              return null;\n            } else if (\n              (typeof val === \"object\" && val !== null && val.type) ||\n              typeof val === \"string\" ||\n              typeof val === \"number\"\n            ) {\n              return (\n                <div\n                  key={key}\n                  style={{ paddingLeft: \"1rem\", borderLeft: \"1px solid #ddd\" }}\n                >\n                  <Key>{key}:</Key> <TreeNode node={val} mark={mark} />\n                </div>\n              );\n            } else if (\n              typeof val === \"object\" &&\n              val !== null &&\n              val.forEach &&\n              val.length > 0\n            ) {\n              return (\n                <div\n                  key={key}\n                  style={{ paddingLeft: \"1rem\", borderLeft: \"1px solid #ddd\" }}\n                >\n                  <div>\n                    <Key>{key}:</Key> [\n                  </div>\n                  {val.map((node: null | Node, i: number) => (\n                    <div\n                      key={i}\n                      style={{\n                        paddingLeft: \"1rem\",\n                        borderLeft: \"1px solid #ddd\"\n                      }}\n                    >\n                      <TreeNode node={node} mark={mark} />\n                    </div>\n                  ))}\n                </div>\n              );\n            } else {\n              return null;\n            }\n          })}\n        </span>\n      </span>\n    );\n  }\n}\n","import \"styled-components/macro\";\nimport { hot } from \"react-hot-loader\";\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport createPersistedState from \"use-persisted-state\";\nimport { apply } from \"jspath\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport parse from \"./parse\";\nimport useDebounce from \"./useDebounce\";\nimport TreeNode from \"./TreeNode\";\nimport Loc from \"./Loc\";\n\nconst QUERY_CM_OPTS = {\n  mode: \"plain\",\n  lineNumbers: true,\n  smartIndent: true,\n  tabSize: 2,\n  indentWithTabs: false\n};\n\nconst JS_CM_OPTS = {\n  mode: \"text/typescript\",\n  theme: \"material\",\n  lineNumbers: true,\n  smartIndent: true,\n  tabSize: 2,\n  indentWithTabs: false\n};\n\nconst useLocalQuery = createPersistedState(\"query\");\nconst useLocalCode = createPersistedState(\"code\");\n\nconst INITIAL_QUERY = `\n..{ .type === \"ClassMethod\" && .key.name === \"total\" }\n..{ .type === \"MemberExpression\" && .property.name === \"reduce\" } \n`;\n\nconst INITIAL_JS = `\n// The aim of this sketch is to be able to\n//  play around with JSPath as a way of selecting\n//  nodes of a Babel-parsed JavaScript code AST.\n\n// For more info, see e.g.:\n// - https://www.npmjs.com/package/jspath\n// - https://astexplorer.net/\n\nconst num = (n => n + 2)(40);\n\nclass Cart {\n  constructor () {\n    this.items = [];\n  }\n  getItems () {\n    return this.items;\n  }\n  addItem (item) {\n  \tthis.items.push(item);\n  }\n  total () {\n    return this.items.reduce((a, b) => a + b, 0);\n  }\n}\n\n// Make by Kelley [klve.nl]\n// Using: React, CodeMirror, JSPath, Babel\n`;\n\nfunction App() {\n  const instance = useRef<{\n    editor?: CodeMirror.Editor;\n    marker?: CodeMirror.TextMarker;\n    sel: CodeMirror.TextMarker[];\n  }>({ sel: [] });\n  const [code, setCode] = useLocalCode<string>(INITIAL_JS);\n  const [ast, setAst] = useState<null | any>(null);\n\n  const [query, setQuery] = useLocalQuery<string>(INITIAL_QUERY);\n  const [sel, setSel] = useState<null | any[]>(null);\n\n  const code_db = useDebounce<string>(code, 200);\n  useEffect(() => {\n    setAst(parse(code_db));\n  }, [code_db]);\n\n  const query_db = useDebounce<string>(query, 50);\n  useEffect(() => {\n    if (ast) {\n      try {\n        setSel(apply(query_db, ast));\n      } catch {\n        setSel(null);\n      }\n    }\n  }, [query_db, ast]);\n\n  const mark = useCallback((loc?: null | Loc) => {\n    if ((loc || loc === null) && instance.current.marker) {\n      instance.current.marker.clear();\n    }\n    if (loc) {\n      if (instance.current.editor) {\n        instance.current.marker = instance.current.editor.getDoc().markText(\n          { line: loc.start.line - 1, ch: loc.start.column },\n          { line: loc.end.line - 1, ch: loc.end.column },\n          {\n            className: \"marked-text\"\n          }\n        );\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!instance.current.editor) return;\n    const doc = instance.current.editor.getDoc();\n    instance.current.sel.forEach(mark => mark.clear());\n    // @ts-ignore\n    instance.current.sel = (sel || [])\n      .map(node => {\n        if (node && node.loc) {\n          return doc.markText(\n            { line: node.loc.start.line - 1, ch: node.loc.start.column },\n            { line: node.loc.end.line - 1, ch: node.loc.end.column },\n            {\n              className: \"query-selected\"\n            }\n          );\n        } else {\n          return null;\n        }\n      })\n      .filter(m => !!m);\n  }, [sel]);\n\n  return (\n    <div\n      css={`\n        display: flex;\n        width: 100%;\n        height: 100%;\n        max-height: 100%;\n        flex-direction: column;\n      `}\n    >\n      <div\n        css={`\n          height: 6.2rem;\n          box-sizing: border-box;\n          border-bottom: 1px solid #aaa;\n          position: relative;\n\n          .react-codemirror2,\n          .CodeMirror {\n            height: 100%;\n          }\n        `}\n      >\n        <CodeMirror\n          value={query}\n          options={QUERY_CM_OPTS}\n          onBeforeChange={(editor, data, value) => {\n            setQuery(value);\n          }}\n        />\n        <div\n          css={`\n            position: absolute;\n            top: 0.6rem;\n            right: 0.6rem;\n            background: #2196f3;\n            color: white;\n            z-index: 10;\n            padding: 0.3rem 0.4rem;\n            font-weight: bold;\n            border-radius: 0.3rem;\n            box-shadow: 0.05rem 0.05rem 0.4rem rgba(0, 0, 0, 0.2);\n          `}\n        >\n          {sel\n            ? `${sel.length} match${sel.length === 1 ? \"\" : \"es\"}`\n            : \"query parse error\"}\n        </div>\n      </div>\n      <div\n        css={`\n          height: calc(100% - 6.2rem);\n\n          display: flex;\n          flex-grow: 1;\n        `}\n      >\n        <div\n          css={`\n            width: 40%;\n\n            .react-codemirror2,\n            .CodeMirror {\n              height: 100%;\n            }\n\n            .query-selected {\n              background: rgba(33, 150, 243, 0.3);\n            }\n\n            .marked-text {\n              background: rgba(233, 30, 99, 0.4);\n            }\n          `}\n        >\n          <CodeMirror\n            value={code}\n            options={JS_CM_OPTS}\n            onBeforeChange={(editor, data, value) => {\n              setCode(value);\n            }}\n            editorDidMount={editor => (instance.current.editor = editor)}\n          />\n        </div>\n        <div\n          onMouseLeave={() => mark(null)}\n          css={`\n            flex-grow: 1;\n            overflow-y: auto;\n            padding: 1rem;\n          `}\n        >\n          <TreeNode node={ast} mark={mark} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst wrap =\n  process.env.NODE_ENV === \"development\" ? hot(module) : (x: any) => x;\n\nexport default wrap(App);\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./style.css\";\nimport App from \"./App\";\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}